[{"/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/index.js":"1","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/App.js":"2","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/reportWebVitals.js":"3","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/users/createUser.js":"4","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/users/userDetails.js":"5","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/users/editUserModal.js":"6","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/blogs/blogCard.js":"7","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/blogs/createBlogModal.js":"8","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/blogs/blogContainer.js":"9","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/blogs/readBlogModal.js":"10","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/blogs/editBlogModal.js":"11","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/blogs/favoriteBlogs.js":"12","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/blogs/allBlogs.js":"13"},{"size":625,"mtime":1608050060845,"results":"14","hashOfConfig":"15"},{"size":6672,"mtime":1608236576959,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1607631785658,"results":"17","hashOfConfig":"15"},{"size":4143,"mtime":1608231446002,"results":"18","hashOfConfig":"15"},{"size":5149,"mtime":1608231068535,"results":"19","hashOfConfig":"15"},{"size":2751,"mtime":1608060258330,"results":"20","hashOfConfig":"15"},{"size":3518,"mtime":1608219041126,"results":"21","hashOfConfig":"15"},{"size":1957,"mtime":1608068070609,"results":"22","hashOfConfig":"15"},{"size":1272,"mtime":1608218099123,"results":"23","hashOfConfig":"15"},{"size":2795,"mtime":1608154875626,"results":"24","hashOfConfig":"15"},{"size":1798,"mtime":1608217753320,"results":"25","hashOfConfig":"15"},{"size":645,"mtime":1608220064339,"results":"26","hashOfConfig":"15"},{"size":1945,"mtime":1608235918014,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1dsee5p",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/index.js",[],["59","60"],"/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/App.js",[],"/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/reportWebVitals.js",[],"/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/users/createUser.js",["61"],"/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/users/userDetails.js",["62","63"],"/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/users/editUserModal.js",["64"],"import React, { Component } from 'react'\nimport { Modal, Form, Button, Label, Header } from 'semantic-ui-react';\n\nclass EditUserModal extends Component{\n    render(){\n        return(\n            <>\n            <Modal open={this.props.open}>\n                <Modal.Header>Edit Your Settings</Modal.Header>\n                <Modal.Content>\n                    <Form>\n                    <Label>Full Name</Label>\n                    <Form.Input type=\"text\" \n                                name=\"name\"\n                                onChange={this.props.handleEditChange}\n                                value={this.props.userToEdit.name}/>\n\n                    <br></br>\n                    <Label>Username</Label>\n                    <Form.Input type=\"text\" \n                                name=\"username\"\n                                disabled\n                                onChange={this.props.handleEditChange}\n                                value={this.props.userToEdit.username}/>\n\n                    <br></br>\n                    <Label>Password</Label>\n                    <Form.Input type=\"password\" \n                                name=\"password\"\n                                disabled\n                                onChange={this.props.handleEditChange}\n                                value={this.props.userToEdit.password}/>\n\n                    <br></br>\n                    <Label>About you: </Label>\n                    <Form.Input type=\"textarea\" \n                                name=\"bio\"\n                                onChange={this.props.handleEditChange}\n                                value={this.props.userToEdit.bio}/>\n                    </Form>\n                    <br></br>\n                    <Label>Image URL</Label>\n                    <Form.Input type=\"text\"\n                                name=\"img\"\n                                onChange={this.props.handleEditChange}\n                                value={this.props.userToEdit.img}></Form.Input>\n\n                    <div>\n                        <h3>Current Profile Picture: </h3>\n                        <img src={this.props.userToEdit.img} alt=\"uploaded\" id=\"photo-preview\"/>\n                    </div>            \n                    <br></br>\n                    <Modal.Actions>\n                        <Button color=\"green\" type=\"submit\" onClick={this.props.closeAndEdit}>\n                        Edit Settings\n                        </Button>\n                        <Button color=\"black\" onClick={this.props.cancel}>\n                            Cancel\n                        </Button>\n                    </Modal.Actions>\n                </Modal.Content>\n            </Modal>\n            </>\n        )\n    }\n}\n\nexport default EditUserModal","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/blogs/blogCard.js",["65","66"],"import React, { Component } from 'react'\nimport { Card, Icon, Button } from 'semantic-ui-react'\nimport ReadBlogModal from './readBlogModal'\nimport EditBlogModal from './editBlogModal'\n\nclass BlogCard extends Component{\n    constructor(){\n        super()\n        this.state = {\n            openBlog: false,\n            openEditBlogModal: false,\n            blogToEdit: {\n                title: '',\n                content: '',\n                tags: ''\n            }\n        }\n    }\n    closeModal = (e) => {\n        this.setState({\n            openBlog: false\n        })\n    }\n\n    handleLike = (newLikes) => {\n        console.log(\"new like count\", newLikes)\n        this.props.handleLike(this.props.blog._id, newLikes)\n    }\n\n    deleteBlog = (e) => {\n        e.stopPropagation()\n        this.props.deleteBlog(this.props.blog._id)\n    }\n\n    handleEditChange = (e) => {\n        console.log(\"inside handle edit change\")\n        this.setState({\n          blogToEdit: {\n            ...this.state.blogToEdit,\n            [e.currentTarget.name]: e.currentTarget.value,\n          },\n        });\n      };\n\n\n      cancelEditBlog = (e) => { \n        this.setState({\n              openEditBlogModal: false\n          })\n      }\n\n      openEditBlogModal = (e) => {\n        e.stopPropagation()\n        this.setState({ openEditBlogModal: true, blogToEdit: {...this.props.blog} })\n\n      }\n\n      editPost = (e) => {\n          this.setState({\n              openEditBlogModal: false\n          })\n          this.props.editBlogPost(this.state.blogToEdit)\n      }\n\n    render(){\n        let canEdit = <></>\n        if(this.props.canEdit){\n            canEdit = \n                <Card.Content>\n                    <Button onClick={this.openEditBlogModal}>Edit</Button>\n                    <Button onClick={this.deleteBlog}>Delete</Button>\n                </Card.Content>\n            \n        }\n        \n        return(\n            <>\n            <Card onClick={() => this.setState({ openBlog: true })}>\n                <Card.Content>\n                    <Card.Header>{this.props.blog.title}</Card.Header>\n                    <Card.Meta>\n                        {this.props.blog.tags}\n                    </Card.Meta>\n                    <Card.Description>\n                        {this.props.blog.author.name}\n                    </Card.Description>\n\n                </Card.Content>\n                {canEdit}\n                <Card.Content extra>\n                    <a>\n                        <Icon name=\"like\" color={this.props.isLiked ? \"blue\":\"\"}/>\n                        {this.props.blog.likes}\n                    </a>\n                    {\"    \"}\n                    <a>\n                        <Icon name=\"comments\"/>\n                        {this.props.blog.comments.length}\n                    </a>\n                    \n                </Card.Content>\n\n            </Card>\n\n            <ReadBlogModal \n            blog={this.props.blog} \n            open={this.state.openBlog} \n            currentUser={this.props.currentUser} \n            closeModal={this.closeModal} \n            isLiked={this.props.isLiked}\n            handleLike={this.handleLike}\n            addComment={this.props.addComment}/>\n\n            <EditBlogModal \n            open={this.state.openEditBlogModal} \n            blog={this.state.blogToEdit} \n            handleEditChange={this.handleEditChange} \n            cancel={this.cancelEditBlog} \n            editPost={this.editPost}/>\n            \n            </>\n        )\n    }\n}\n\nexport default BlogCard","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/blogs/createBlogModal.js",[],"/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/blogs/blogContainer.js",["67"],"import React, { Component } from 'react'\nimport BlogCard from './blogCard'\nimport axios from 'axios'\n\nclass BlogContainer extends Component{\n    render(){\n        // console.log(this.props.currentUser.blogs, \"blogs from container...\")\n        // console.log(this.props.currentUser.favoriteBlogs, \"fav blogs container...\")\n        \n        const blogs = this.props.blogs.map((blog, index) => {\n            let canEdit = false\n            let isLiked = false\n            if(this.props.currentUser.favoriteBlogs.includes(blog._id)){\n                isLiked = true\n            }\n            if(this.props.currentUser._id === blog.author._id){\n                canEdit = true\n            }\n\n            return <BlogCard \n                    handleLike={this.props.handleLike} \n                    currentUser={this.props.currentUser} \n                    canEdit={canEdit} \n                    isLiked={isLiked} \n                    blog={blog} \n                    key={blog._id}\n                    addComment={this.props.addComment}\n                    deleteBlog={this.props.deleteBlog}\n                    editBlogPost={this.props.editBlogPost}/>\n\n        })\n        return(\n            <>\n            {blogs}\n            </>\n        )\n    }\n}\n\nexport default BlogContainer","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/blogs/readBlogModal.js",["68"],"import React, { Component } from 'react'\nimport { Modal, Form, Button, Comment, Header } from 'semantic-ui-react';\n\nclass ReadBlogModal extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            isLiked: props.isLiked, \n            comment: ''\n        }\n    }\n\n    handleEditChange = (e) => {\n        this.setState({\n            comment: e.currentTarget.value\n        })\n    }\n    handleLike = () => {\n        let newLikes = 0\n        if(this.state.isLiked){\n            this.setState({\n                isLiked: false\n            })\n            newLikes = this.props.blog.likes -= 1\n        }\n        else{\n            this.setState({\n                isLiked: true\n            })\n            newLikes = this.props.blog.likes += 1\n        }\n        this.props.handleLike(newLikes)\n    }\n\n    addComment = (e) => {\n        // console.log(e)\n        this.props.addComment(this.props.blog._id, this.props.currentUser.name, this.state.comment)\n        this.setState({\n            comment: \"\"\n        })\n    }\n\n    render(){\n        return(\n            <>\n            <Modal open={this.props.open}>\n                <Modal.Header>{this.props.blog.title}</Modal.Header>\n                <Modal.Content>\n                    <Modal.Description>{this.props.blog.tags} - {this.props.blog.author.name}</Modal.Description>\n                </Modal.Content>\n                <Modal.Content>\n                    {this.props.blog.content}\n                </Modal.Content>\n                <Modal.Header>Comments</Modal.Header>\n                <Modal.Content>\n                    <Comment.Group>\n                    {this.props.blog.comments.map((comment) => {\n                        return <Comment>\n                            <Comment.Author>{comment.author}</Comment.Author>\n                            <Comment.Text>{comment.content}</Comment.Text>\n                        </Comment>\n                    })}\n                    <Form>\n                        <Form.Input \n                        type=\"text\"\n                        name=\"author\"\n                        value={this.props.currentUser.name}\n                        />\n                        <Form.TextArea name=\"content\" onChange={this.handleEditChange} value={this.state.comment}/>\n                        <Button onClick={this.addComment}>Add Comment</Button>\n                    </Form>\n                    </Comment.Group>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button color={this.state.isLiked ? \"blue\":\"\"} onClick={this.handleLike}>Like</Button>\n                    <Button color=\"black\" onClick={this.props.closeModal}>Close</Button>\n                </Modal.Actions>\n            </Modal>\n            </>\n        )\n    }\n}\n\nexport default ReadBlogModal","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/blogs/editBlogModal.js",[],"/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/blogs/favoriteBlogs.js",[],"/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/blogs/allBlogs.js",["69","70"],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":2,"column":16,"nodeType":"77","messageId":"78","endLine":2,"endColumn":22},{"ruleId":"75","severity":1,"message":"76","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":16},{"ruleId":"79","severity":1,"message":"80","line":141,"column":21,"nodeType":"81","endLine":141,"endColumn":77},{"ruleId":"75","severity":1,"message":"82","line":2,"column":38,"nodeType":"77","messageId":"78","endLine":2,"endColumn":44},{"ruleId":"83","severity":1,"message":"84","line":91,"column":21,"nodeType":"81","endLine":91,"endColumn":24},{"ruleId":"83","severity":1,"message":"84","line":96,"column":21,"nodeType":"81","endLine":96,"endColumn":24},{"ruleId":"75","severity":1,"message":"85","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":13},{"ruleId":"75","severity":1,"message":"82","line":2,"column":40,"nodeType":"77","messageId":"78","endLine":2,"endColumn":46},{"ruleId":"75","severity":1,"message":"86","line":3,"column":10,"nodeType":"77","messageId":"78","endLine":3,"endColumn":14},{"ruleId":"75","severity":1,"message":"87","line":3,"column":16,"nodeType":"77","messageId":"78","endLine":3,"endColumn":21},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Header' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'axios' is defined but never used.","'Form' is defined but never used.","'Label' is defined but never used.","no-global-assign","no-unsafe-negation"]