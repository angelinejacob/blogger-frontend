[{"/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/index.js":"1","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/App.js":"2","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/reportWebVitals.js":"3","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/users/createUser.js":"4","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/users/userDetails.js":"5","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/users/editUserModal.js":"6","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/blogs/blogCard.js":"7","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/blogs/createBlogModal.js":"8","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/blogs/blogContainer.js":"9","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/blogs/readBlogModal.js":"10","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/blogs/editBlogModal.js":"11","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/blogs/favoriteBlogs.js":"12"},{"size":625,"mtime":1608050060845,"results":"13","hashOfConfig":"14"},{"size":5796,"mtime":1608220076741,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1607631785658,"results":"16","hashOfConfig":"14"},{"size":4124,"mtime":1607957372001,"results":"17","hashOfConfig":"14"},{"size":5130,"mtime":1608218063345,"results":"18","hashOfConfig":"14"},{"size":2751,"mtime":1608060258330,"results":"19","hashOfConfig":"14"},{"size":3518,"mtime":1608219041126,"results":"20","hashOfConfig":"14"},{"size":1957,"mtime":1608068070609,"results":"21","hashOfConfig":"14"},{"size":1272,"mtime":1608218099123,"results":"22","hashOfConfig":"14"},{"size":2795,"mtime":1608154875626,"results":"23","hashOfConfig":"14"},{"size":1798,"mtime":1608217753320,"results":"24","hashOfConfig":"14"},{"size":645,"mtime":1608220064339,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dsee5p",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/index.js",[],"/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/App.js",[],"/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/reportWebVitals.js",[],"/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/users/createUser.js",["57"],"import React, { Component } from 'react'\nimport { Form, Button, Label, Header } from 'semantic-ui-react';\nimport '../App.css'\nimport axios from 'axios'\n\nclass NewUser extends Component{\n    constructor(props){\n        super()\n        this.state = {\n            username: '',\n            password: '',\n            name: '',\n            bio: '',\n            img: '',\n        }\n    }\n\n    createUser = (e) => {\n        e.preventDefault()\n        /**\n         * BELOW IMPLEMENTATION USED WHEN TRYING TO UPLOAD FILE\n         */\n        let formData = new FormData()\n\n        // add form fields to form data object\n        for(let i = 0; i < 5; i++){    \n                formData.append(e.target[i].name, e.target[i].value)\n        }\n\n        // test that form data is being populated\n        for(var pair of formData.entries()){\n            console.log(pair[0]+ \", \" + pair[1])\n        }\n\n        axios({\n            method: 'post',\n            url: 'http://localhost:3000/users/',\n            data: formData,\n            headers: {'Content-Type': 'multipart/form-data'}\n        })\n        .then((response) => {\n            console.log(\"successfully sent\", response)\n        })\n        .catch((error) => {\n            console.log(\"ERROR OCCURED: \", error)\n        })\n        \n    }\n\n    // method to change input fields\n    handleEditChange = (e) => {\n        this.setState({\n            [e.currentTarget.name]: [e.currentTarget.value]\n        })\n\n        console.log(this.state)\n    }\n\n    // previews the uploaded photo\n    addPhotoPreview = (e) => {\n        console.log(e)\n        let file = e.target.files[0]\n        let reader = new FileReader()\n        let url = reader.readAsDataURL(file)\n\n        reader.onloadend = function (e) {\n            this.setState({\n              img: [reader.result]\n            })\n          }.bind(this)\n\n        console.log('URL: ' ,url)\n    }\n\n    render(){\n        return(\n            <>\n            <Header>Register for Blogger!</Header>\n            <Form onSubmit={this.createUser}>\n                <Label>Full Name</Label>\n                <Form.Input type=\"text\" \n                            name=\"name\"\n                            onChange={this.handleEditChange}\n                            value={this.state.name}/>\n\n                <br></br>\n                <Label>Username</Label>\n                <Form.Input type=\"text\" \n                            name=\"username\"\n                            onChange={this.handleEditChange}\n                            value={this.state.username}/>\n\n                <br></br>\n                <Label>Password</Label>\n                <Form.Input type=\"password\" \n                            name=\"password\"\n                            onChange={this.handleEditChange}\n                            value={this.state.password}/>\n\n                <br></br>\n                <Label>Bio</Label>\n                <Form.Input type=\"textarea\" \n                            name=\"bio\"\n                            onChange={this.handleEditChange}\n                            value={this.state.bio}/>\n\n                {/* <Label>Upload Image</Label>\n                <Form.Input type=\"file\" name=\"img\" onChange={this.addPhotoPreview}/>\n                <div>\n                    <img src=\"https://scontent-lga3-2.xx.fbcdn.net/v/t1.0-9/66833932_1332691630221289_681358881762312192_o.jpg?_nc_cat=100&ccb=2&_nc_sid=09cbfe&_nc_ohc=bIcD_SSkqHoAX-tjmg8&_nc_ht=scontent-lga3-2.xx&oh=4048d2e15767f28a5908a286fb6b6c2b&oe=5FFDADD6\" alt=\"uploaded\" id=\"photo-preview\"/>\n                </div> */}\n                <br></br>\n                <Label>Image URL</Label>\n                <Form.Input type=\"text\"\n                            name=\"img\"\n                            onChange={this.handleEditChange}\n                            value={this.state.img}></Form.Input>\n\n                <div>\n                    <img src={this.state.img} alt=\"uploaded\" id=\"photo-preview\"/>\n                </div>            \n                <br></br>\n                <Form.Input type=\"submit\" value=\"Create User\"/>\n            </Form>\n            </>\n        )\n    }\n}\n\nexport default NewUser;",["58","59"],"/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/users/userDetails.js",["60","61"],"import React, { Component } from 'react'\nimport { Button, Menu } from 'semantic-ui-react'\nimport EditUserModal from './editUserModal'\nimport BlogContainer from '../blogs/blogContainer'\nimport CreateBlogModal from '../blogs/createBlogModal'\nimport axios from 'axios'\n\nclass UserDetails extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            openEditModal: false,\n            userToEdit: {\n                bio: '',\n                img: '',\n                name: '',\n                password: '',\n                username: '',\n                _id: ''\n            },\n            newBlog: {\n                title: '',\n                content: '',\n                tags: ''\n            }, \n            openNewBlogModal: false,\n            blogs: [],\n            currentUser: props.user\n        }\n    }\n    \n    handleEditChange = (e) => {\n        console.log(\"inside handle edit change\")\n        this.setState({\n          userToEdit: {\n            ...this.state.userToEdit,\n            [e.currentTarget.name]: e.currentTarget.value,\n          },\n        });\n      };\n\n    handleEditChangeBlog = (e) => {\n        this.setState({\n            newBlog: {\n                ...this.state.newBlog,\n                [e.currentTarget.name]: e.currentTarget.value\n            }\n        })\n    }\n\n      closeAndEdit = (e) => {\n          console.log(\"inside close and edit!\")\n          this.setState({\n              openEditModal: false\n          })\n          this.props.editDetails(this.state.userToEdit)\n          this.getBlogs()\n      }\n\n      cancel = (e) => {\n          this.setState({\n              openEditModal: false\n          })\n      }\n\n      cancelPost = (e) => {\n        this.setState({\n            openNewBlogModal: false\n        })\n      }\n\n      createPost = (e) => {\n        console.log(this.state.newBlog, \"new blog\")\n        this.setState({\n            openNewBlogModal: false\n        })\n\n        // create new blog\n        this.props.createNewBlog(this.state.newBlog)\n      }\n\n      getBlogs = () => {\n          this.setState({\n              blogs: []\n          })\n          this.props.user.blogs.forEach((blog) => {\n            axios({\n                method: 'get',\n                url: `http://localhost:3000/blogs/${blog._id}`\n            })\n            .then((response) => {\n                let blogs = this.state.blogs\n                blogs.push(response.data)\n                this.setState({\n                    blog: blogs\n                })\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n          })\n        \n      }\n\n    render(){\n        // Will have to map individual blogs to a Blog Container and then display it below\n        // const myBlogs = this.props.user.blogs.map((blog) => {\n        //     return <BlogCard user={this.props.user} blog={blog}/>\n        // })\n        let blogs = <h3>Click on Link to View Your Blogs</h3>\n        if(this.state.blogs.length > 0){\n            blogs = <BlogContainer \n                        handleLike={this.props.handleLike} \n                        currentUser={this.props.user} \n                        blogs={this.props.blogs} \n                        addComment={this.props.addComment}\n                        deleteBlog={this.props.deleteBlog}\n                        editBlogPost={this.props.editBlogPost}/>\n        }\n\n        return(\n            <>\n            <div className=\"user-page\">\n                <div className=\"action-menu\">\n                    <Menu text>\n                        <Menu.Item\n                            name=\"editAccount\"\n                            onClick={() => this.setState({ openEditModal: true, userToEdit: {...this.props.user} })}/>\n                        <Menu.Item\n                            name=\"deleteAccount\"/>\n                        <Menu.Item\n                            name=\"newPost\"\n                            onClick={() => this.setState({ openNewBlogModal: true })}/>\n                        <Menu.Item\n                            name=\"myBlogs\"\n                            onClick={this.getBlogs}/>\n                    </Menu>\n                </div>\n                <div id=\"user-details\">\n                    <h1>{this.props.user.name}</h1>\n                    <img id=\"user-photo-preview\" src={this.props.user.img}/>\n                    <div id=\"bio\">\n                        <h6>{this.props.user.bio}</h6>\n                    </div>\n                </div>\n            </div>\n\n            {/* <Button onClick={() => this.setState({ openEditModal: true, userToEdit: {...this.props.user} })}>Edit My Account</Button> */}\n            <EditUserModal open={this.state.openEditModal} handleEditChange={this.handleEditChange} userToEdit={this.state.userToEdit} closeAndEdit={this.closeAndEdit} cancel={this.cancel}/>\n            <CreateBlogModal open={this.state.openNewBlogModal} cancelPost={this.cancelPost} createPost={this.createPost} newBlog={this.state.newBlog} handleEditChange={this.handleEditChangeBlog}/>\n\n            <h1>My Blogs</h1>\n            {blogs}\n\n            </>\n        )\n    }\n}\n\nexport default UserDetails","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/users/editUserModal.js",["62"],"import React, { Component } from 'react'\nimport { Modal, Form, Button, Label, Header } from 'semantic-ui-react';\n\nclass EditUserModal extends Component{\n    render(){\n        return(\n            <>\n            <Modal open={this.props.open}>\n                <Modal.Header>Edit Your Settings</Modal.Header>\n                <Modal.Content>\n                    <Form>\n                    <Label>Full Name</Label>\n                    <Form.Input type=\"text\" \n                                name=\"name\"\n                                onChange={this.props.handleEditChange}\n                                value={this.props.userToEdit.name}/>\n\n                    <br></br>\n                    <Label>Username</Label>\n                    <Form.Input type=\"text\" \n                                name=\"username\"\n                                disabled\n                                onChange={this.props.handleEditChange}\n                                value={this.props.userToEdit.username}/>\n\n                    <br></br>\n                    <Label>Password</Label>\n                    <Form.Input type=\"password\" \n                                name=\"password\"\n                                disabled\n                                onChange={this.props.handleEditChange}\n                                value={this.props.userToEdit.password}/>\n\n                    <br></br>\n                    <Label>About you: </Label>\n                    <Form.Input type=\"textarea\" \n                                name=\"bio\"\n                                onChange={this.props.handleEditChange}\n                                value={this.props.userToEdit.bio}/>\n                    </Form>\n                    <br></br>\n                    <Label>Image URL</Label>\n                    <Form.Input type=\"text\"\n                                name=\"img\"\n                                onChange={this.props.handleEditChange}\n                                value={this.props.userToEdit.img}></Form.Input>\n\n                    <div>\n                        <h3>Current Profile Picture: </h3>\n                        <img src={this.props.userToEdit.img} alt=\"uploaded\" id=\"photo-preview\"/>\n                    </div>            \n                    <br></br>\n                    <Modal.Actions>\n                        <Button color=\"green\" type=\"submit\" onClick={this.props.closeAndEdit}>\n                        Edit Settings\n                        </Button>\n                        <Button color=\"black\" onClick={this.props.cancel}>\n                            Cancel\n                        </Button>\n                    </Modal.Actions>\n                </Modal.Content>\n            </Modal>\n            </>\n        )\n    }\n}\n\nexport default EditUserModal","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/blogs/blogCard.js",["63","64"],"import React, { Component } from 'react'\nimport { Card, Icon, Button } from 'semantic-ui-react'\nimport ReadBlogModal from './readBlogModal'\nimport EditBlogModal from './editBlogModal'\n\nclass BlogCard extends Component{\n    constructor(){\n        super()\n        this.state = {\n            openBlog: false,\n            openEditBlogModal: false,\n            blogToEdit: {\n                title: '',\n                content: '',\n                tags: ''\n            }\n        }\n    }\n    closeModal = (e) => {\n        this.setState({\n            openBlog: false\n        })\n    }\n\n    handleLike = (newLikes) => {\n        console.log(\"new like count\", newLikes)\n        this.props.handleLike(this.props.blog._id, newLikes)\n    }\n\n    deleteBlog = (e) => {\n        e.stopPropagation()\n        this.props.deleteBlog(this.props.blog._id)\n    }\n\n    handleEditChange = (e) => {\n        console.log(\"inside handle edit change\")\n        this.setState({\n          blogToEdit: {\n            ...this.state.blogToEdit,\n            [e.currentTarget.name]: e.currentTarget.value,\n          },\n        });\n      };\n\n\n      cancelEditBlog = (e) => { \n        this.setState({\n              openEditBlogModal: false\n          })\n      }\n\n      openEditBlogModal = (e) => {\n        e.stopPropagation()\n        this.setState({ openEditBlogModal: true, blogToEdit: {...this.props.blog} })\n\n      }\n\n      editPost = (e) => {\n          this.setState({\n              openEditBlogModal: false\n          })\n          this.props.editBlogPost(this.state.blogToEdit)\n      }\n\n    render(){\n        let canEdit = <></>\n        if(this.props.canEdit){\n            canEdit = \n                <Card.Content>\n                    <Button onClick={this.openEditBlogModal}>Edit</Button>\n                    <Button onClick={this.deleteBlog}>Delete</Button>\n                </Card.Content>\n            \n        }\n        \n        return(\n            <>\n            <Card onClick={() => this.setState({ openBlog: true })}>\n                <Card.Content>\n                    <Card.Header>{this.props.blog.title}</Card.Header>\n                    <Card.Meta>\n                        {this.props.blog.tags}\n                    </Card.Meta>\n                    <Card.Description>\n                        {this.props.blog.author.name}\n                    </Card.Description>\n\n                </Card.Content>\n                {canEdit}\n                <Card.Content extra>\n                    <a>\n                        <Icon name=\"like\" color={this.props.isLiked ? \"blue\":\"\"}/>\n                        {this.props.blog.likes}\n                    </a>\n                    {\"    \"}\n                    <a>\n                        <Icon name=\"comments\"/>\n                        {this.props.blog.comments.length}\n                    </a>\n                    \n                </Card.Content>\n\n            </Card>\n\n            <ReadBlogModal \n            blog={this.props.blog} \n            open={this.state.openBlog} \n            currentUser={this.props.currentUser} \n            closeModal={this.closeModal} \n            isLiked={this.props.isLiked}\n            handleLike={this.handleLike}\n            addComment={this.props.addComment}/>\n\n            <EditBlogModal \n            open={this.state.openEditBlogModal} \n            blog={this.state.blogToEdit} \n            handleEditChange={this.handleEditChange} \n            cancel={this.cancelEditBlog} \n            editPost={this.editPost}/>\n            \n            </>\n        )\n    }\n}\n\nexport default BlogCard","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/blogs/createBlogModal.js",[],"/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/blogs/blogContainer.js",["65"],"import React, { Component } from 'react'\nimport BlogCard from './blogCard'\nimport axios from 'axios'\n\nclass BlogContainer extends Component{\n    render(){\n        // console.log(this.props.currentUser.blogs, \"blogs from container...\")\n        // console.log(this.props.currentUser.favoriteBlogs, \"fav blogs container...\")\n        \n        const blogs = this.props.blogs.map((blog, index) => {\n            let canEdit = false\n            let isLiked = false\n            if(this.props.currentUser.favoriteBlogs.includes(blog._id)){\n                isLiked = true\n            }\n            if(this.props.currentUser._id === blog.author._id){\n                canEdit = true\n            }\n\n            return <BlogCard \n                    handleLike={this.props.handleLike} \n                    currentUser={this.props.currentUser} \n                    canEdit={canEdit} \n                    isLiked={isLiked} \n                    blog={blog} \n                    key={blog._id}\n                    addComment={this.props.addComment}\n                    deleteBlog={this.props.deleteBlog}\n                    editBlogPost={this.props.editBlogPost}/>\n\n        })\n        return(\n            <>\n            {blogs}\n            </>\n        )\n    }\n}\n\nexport default BlogContainer","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/blogs/readBlogModal.js",["66"],"import React, { Component } from 'react'\nimport { Modal, Form, Button, Comment, Header } from 'semantic-ui-react';\n\nclass ReadBlogModal extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            isLiked: props.isLiked, \n            comment: ''\n        }\n    }\n\n    handleEditChange = (e) => {\n        this.setState({\n            comment: e.currentTarget.value\n        })\n    }\n    handleLike = () => {\n        let newLikes = 0\n        if(this.state.isLiked){\n            this.setState({\n                isLiked: false\n            })\n            newLikes = this.props.blog.likes -= 1\n        }\n        else{\n            this.setState({\n                isLiked: true\n            })\n            newLikes = this.props.blog.likes += 1\n        }\n        this.props.handleLike(newLikes)\n    }\n\n    addComment = (e) => {\n        // console.log(e)\n        this.props.addComment(this.props.blog._id, this.props.currentUser.name, this.state.comment)\n        this.setState({\n            comment: \"\"\n        })\n    }\n\n    render(){\n        return(\n            <>\n            <Modal open={this.props.open}>\n                <Modal.Header>{this.props.blog.title}</Modal.Header>\n                <Modal.Content>\n                    <Modal.Description>{this.props.blog.tags} - {this.props.blog.author.name}</Modal.Description>\n                </Modal.Content>\n                <Modal.Content>\n                    {this.props.blog.content}\n                </Modal.Content>\n                <Modal.Header>Comments</Modal.Header>\n                <Modal.Content>\n                    <Comment.Group>\n                    {this.props.blog.comments.map((comment) => {\n                        return <Comment>\n                            <Comment.Author>{comment.author}</Comment.Author>\n                            <Comment.Text>{comment.content}</Comment.Text>\n                        </Comment>\n                    })}\n                    <Form>\n                        <Form.Input \n                        type=\"text\"\n                        name=\"author\"\n                        value={this.props.currentUser.name}\n                        />\n                        <Form.TextArea name=\"content\" onChange={this.handleEditChange} value={this.state.comment}/>\n                        <Button onClick={this.addComment}>Add Comment</Button>\n                    </Form>\n                    </Comment.Group>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button color={this.state.isLiked ? \"blue\":\"\"} onClick={this.handleLike}>Like</Button>\n                    <Button color=\"black\" onClick={this.props.closeModal}>Close</Button>\n                </Modal.Actions>\n            </Modal>\n            </>\n        )\n    }\n}\n\nexport default ReadBlogModal","/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/blogs/editBlogModal.js",[],"/Users/angelinejacob/sei/projects/project-4/blogger-frontend/src/blogs/favoriteBlogs.js",[],{"ruleId":"67","severity":1,"message":"68","line":2,"column":16,"nodeType":"69","messageId":"70","endLine":2,"endColumn":22},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"67","severity":1,"message":"68","line":2,"column":10,"nodeType":"69","messageId":"70","endLine":2,"endColumn":16},{"ruleId":"75","severity":1,"message":"76","line":141,"column":21,"nodeType":"77","endLine":141,"endColumn":77},{"ruleId":"67","severity":1,"message":"78","line":2,"column":38,"nodeType":"69","messageId":"70","endLine":2,"endColumn":44},{"ruleId":"79","severity":1,"message":"80","line":91,"column":21,"nodeType":"77","endLine":91,"endColumn":24},{"ruleId":"79","severity":1,"message":"80","line":96,"column":21,"nodeType":"77","endLine":96,"endColumn":24},{"ruleId":"67","severity":1,"message":"81","line":3,"column":8,"nodeType":"69","messageId":"70","endLine":3,"endColumn":13},{"ruleId":"67","severity":1,"message":"78","line":2,"column":40,"nodeType":"69","messageId":"70","endLine":2,"endColumn":46},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","no-native-reassign",["82"],"no-negated-in-lhs",["83"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Header' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]